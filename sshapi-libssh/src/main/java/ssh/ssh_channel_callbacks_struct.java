package ssh;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import ssh.SshLibrary.ssh_channel_auth_agent_req_callback;
import ssh.SshLibrary.ssh_channel_close_callback;
import ssh.SshLibrary.ssh_channel_data_callback;
import ssh.SshLibrary.ssh_channel_env_request_callback;
import ssh.SshLibrary.ssh_channel_eof_callback;
import ssh.SshLibrary.ssh_channel_exec_request_callback;
import ssh.SshLibrary.ssh_channel_exit_signal_callback;
import ssh.SshLibrary.ssh_channel_exit_status_callback;
import ssh.SshLibrary.ssh_channel_pty_request_callback;
import ssh.SshLibrary.ssh_channel_pty_window_change_callback;
import ssh.SshLibrary.ssh_channel_shell_request_callback;
import ssh.SshLibrary.ssh_channel_signal_callback;
import ssh.SshLibrary.ssh_channel_subsystem_request_callback;
import ssh.SshLibrary.ssh_channel_write_wontblock_callback;
import ssh.SshLibrary.ssh_channel_x11_req_callback;
/**
 * <i>native declaration : /usr/include/libssh/callbacks.h:439</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ssh_channel_callbacks_struct extends Structure {
	public NativeSize size;
	/** C type : void* */
	public Pointer userdata;
	/** C type : ssh_channel_data_callback */
	public ssh_channel_data_callback channel_data_function;
	/** C type : ssh_channel_eof_callback */
	public ssh_channel_eof_callback channel_eof_function;
	/** C type : ssh_channel_close_callback */
	public ssh_channel_close_callback channel_close_function;
	/** C type : ssh_channel_signal_callback */
	public ssh_channel_signal_callback channel_signal_function;
	/** C type : ssh_channel_exit_status_callback */
	public ssh_channel_exit_status_callback channel_exit_status_function;
	/** C type : ssh_channel_exit_signal_callback */
	public ssh_channel_exit_signal_callback channel_exit_signal_function;
	/** C type : ssh_channel_pty_request_callback */
	public ssh_channel_pty_request_callback channel_pty_request_function;
	/** C type : ssh_channel_shell_request_callback */
	public ssh_channel_shell_request_callback channel_shell_request_function;
	/** C type : ssh_channel_auth_agent_req_callback */
	public ssh_channel_auth_agent_req_callback channel_auth_agent_req_function;
	/** C type : ssh_channel_x11_req_callback */
	public ssh_channel_x11_req_callback channel_x11_req_function;
	/** C type : ssh_channel_pty_window_change_callback */
	public ssh_channel_pty_window_change_callback channel_pty_window_change_function;
	/** C type : ssh_channel_exec_request_callback */
	public ssh_channel_exec_request_callback channel_exec_request_function;
	/** C type : ssh_channel_env_request_callback */
	public ssh_channel_env_request_callback channel_env_request_function;
	/** C type : ssh_channel_subsystem_request_callback */
	public ssh_channel_subsystem_request_callback channel_subsystem_request_function;
	/** C type : ssh_channel_write_wontblock_callback */
	public ssh_channel_write_wontblock_callback channel_write_wontblock_function;
	public ssh_channel_callbacks_struct() {
		super();
	}
	@Override
	protected List<String> getFieldOrder() {
		return Arrays.asList("size", "userdata", "channel_data_function", "channel_eof_function", "channel_close_function", "channel_signal_function", "channel_exit_status_function", "channel_exit_signal_function", "channel_pty_request_function", "channel_shell_request_function", "channel_auth_agent_req_function", "channel_x11_req_function", "channel_pty_window_change_function", "channel_exec_request_function", "channel_env_request_function", "channel_subsystem_request_function", "channel_write_wontblock_function");
	}
	public ssh_channel_callbacks_struct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ssh_channel_callbacks_struct implements Structure.ByReference {
		
	};
	public static class ByValue extends ssh_channel_callbacks_struct implements Structure.ByValue {
		
	};
}
