package ssh;

import java.util.Arrays;
import java.util.List;

import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.ochafik.lang.jnaerator.runtime.Structure;
import ssh.SshLibrary.ssh_bind_incoming_connection_callback;

/**
 * @brief These are the callbacks exported by the ssh_bind structure.<br>
 *        * They are called by the server module when events appear on the
 *        network.<br>
 *        <i>native declaration : /usr/include/libssh/server.h:69</i><br>
 *        This file was autogenerated by
 *        <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 *        a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a>
 *        that <a href=
 *        "http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 *        opensource projects.</a>.<br>
 *        For help, please visit
 *        <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> ,
 *        <a href="http://rococoa.dev.java.net/">Rococoa</a>, or
 *        <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ssh_bind_callbacks_struct
		extends Structure<ssh_bind_callbacks_struct, ssh_bind_callbacks_struct.ByValue, ssh_bind_callbacks_struct.ByReference> {
	/// DON'T SET THIS use ssh_callbacks_init() instead.
	public NativeSize size;
	/**
	 * A new connection is available.<br>
	 * C type : ssh_bind_incoming_connection_callback
	 */
	public ssh_bind_incoming_connection_callback incoming_connection;

	public ssh_bind_callbacks_struct() {
		super();
	}

	@Override
	protected List<String> getFieldOrder() {
		return Arrays.asList(new java.lang.String[] { "size", "incoming_connection" });
	}

	/**
	 * @param size DON'T SET THIS use ssh_callbacks_init() instead.<br>
	 * @param incoming_connection A new connection is available.<br>
	 *            C type : ssh_bind_incoming_connection_callback
	 */
	public ssh_bind_callbacks_struct(NativeSize size, ssh_bind_incoming_connection_callback incoming_connection) {
		super();
		this.size = size;
		this.incoming_connection = incoming_connection;
	}

	@Override
	protected ByReference newByReference() {
		return new ByReference();
	}

	@Override
	protected ByValue newByValue() {
		return new ByValue();
	}

	@Override
	protected ssh_bind_callbacks_struct newInstance() {
		return new ssh_bind_callbacks_struct();
	}

	public static ssh_bind_callbacks_struct[] newArray(int arrayLength) {
		return Structure.newArray(ssh_bind_callbacks_struct.class, arrayLength);
	}

	public static class ByReference extends ssh_bind_callbacks_struct implements Structure.ByReference {
	};

	public static class ByValue extends ssh_bind_callbacks_struct implements Structure.ByValue {
	};
}
